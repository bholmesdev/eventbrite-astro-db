---
import { Event, db, eq } from "astro:db";
import Layout from "../../layouts/Layout.astro";
import { buyTicket } from "simple:action";

const eventId = Number(Astro.params.event);

if (isNaN(eventId)) return Astro.redirect("/404");

const event = await db.select().from(Event).where(eq(Event.id, eventId)).get();

if (!event) return Astro.redirect("/404");
---

<Layout title="Welcome to Astro.">
  <main>
    <h1>{event.name}</h1>
    <p>
      {event.description}
    </p>
    <form method="POST" action={buyTicket}>
      <input type="hidden" name="eventId" value={event.id} />
      <input type="number" name="quantity" min="1" max="10" required />
      <input type="email" name="email" required />
      <label>
        <input type="checkbox" name="newsletter" />
        Subscribe to our newsletter
      </label>
      <button>Buy</button>
    </form>
    <pre id="result"></pre>
  </main>
</Layout>

<script>
  // enhance the form
  const form = document.querySelector("form")!;

  // form.addEventListener("submit", async (e) => {
  //   e.preventDefault();
  //   e.stopPropagation();
  //   const formData = new FormData(form);
  //   const response = await buyTicket(formData);
  //   form.dispatchEvent(new CustomEvent("fancy-submit", { detail: response }));
  // });

  form.addEventListener("fancy-submit", (e) => {
    console.log("detail", e.detail);
    const { fieldErrors } = e.detail;
    // TODO: standardize error handling
    if (fieldErrors) {
      for (const [name, error] of Object.entries(fieldErrors)) {
        const input = form.elements.namedItem(name);
        if (input) {
          input.setCustomValidity(error);
          input.reportValidity();
        }
      }
    } else {
      document.querySelector("#result").textContent = JSON.stringify(
        e.detail,
        null,
        2
      );
    }
  });
</script>
